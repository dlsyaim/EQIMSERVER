package com.gisinfo.sand.util.geo.shape.geotool;

import com.esri.core.geometry.Point2D;
import com.gisinfo.sa.esrijson.EsriFeature;
import com.gisinfo.sand.util.geo.shape.bean.TownModel;
import org.apache.commons.lang3.StringUtils;
import org.geotools.data.simple.SimpleFeatureCollection;
import org.geotools.feature.AttributeTypeBuilder;
import org.geotools.feature.FeatureImpl;
import org.geotools.feature.simple.SimpleFeatureBuilder;
import org.geotools.feature.simple.SimpleFeatureTypeBuilder;
import org.geotools.feature.simple.SimpleFeatureTypeImpl;
import org.geotools.feature.type.FeatureTypeFactoryImpl;
import org.geotools.geojson.feature.FeatureJSON;
import org.geotools.geojson.geom.GeometryJSON;
import org.geotools.referencing.CRS;
import org.locationtech.jts.geom.*;
import org.opengis.feature.Feature;
import org.opengis.feature.simple.SimpleFeature;
import org.opengis.feature.simple.SimpleFeatureType;
import org.opengis.feature.type.AttributeDescriptor;
import org.opengis.feature.type.AttributeType;
import org.opengis.feature.type.FeatureTypeFactory;
import org.opengis.referencing.FactoryException;
import org.opengis.referencing.crs.CoordinateReferenceSystem;

import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Set;

/**
 * geo 类型转换
 */
public final class GeoConvertUtil {

    /**
     * geojson转为多面Feature
     * @param geoJson
     * @return
     */
    public static Feature geoJsonToFeature(String geoJson) {
        if (StringUtils.isNotEmpty(geoJson)) {
            GeometryJSON geometryJson = new GeometryJSON();
            FeatureJSON featureJSON = new FeatureJSON(geometryJson);
            Reader reader = new StringReader(geoJson);
            try {
                return featureJSON.readFeature(reader);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        return null;
    }

    /**
     * simpleFeature 转为geojson
     * @param feature
     * @return
     */
    public static String featureToGeoJson(SimpleFeature feature) {
        if (null != feature) {
            try {
                return new FeatureJSON().toString(feature);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        return null;
    }

    /**
     * EsriFeature 转为 feature ，只用作地震烈度圈转换
     * @param esriFeature
     * @return
     */
    public static Feature esriFeatureToFeatureIntensityCircle(EsriFeature esriFeature) {
        if (null != esriFeature) {
            com.esri.core.geometry.Polygon esriPolygon = (com.esri.core.geometry.Polygon) esriFeature.geometry;
            SimpleFeatureBuilder featureBuilder = null;
            if (esriPolygon.getPathCount() > 1) {
                MultiPolygon multiPolygon = esriPolygonToMultiPolygon(esriPolygon);
                SimpleFeatureType simpleFeatureType = createIntensityCircle(multiPolygon, esriFeature);
                featureBuilder = new SimpleFeatureBuilder(simpleFeatureType);
                featureBuilder.add(multiPolygon);
            } else {
                Polygon polygon = esriPolygonToPolygon(esriPolygon);
                SimpleFeatureType simpleFeatureType = createIntensityCircle(polygon, esriFeature);
                featureBuilder = new SimpleFeatureBuilder(simpleFeatureType);
                featureBuilder.add(polygon);
            }
            Map<String, Object> attributes = esriFeature.attributes;
            Set<Map.Entry<String, Object>> set = attributes.entrySet();
            for (Map.Entry<String, Object> entry : set) {
                featureBuilder.set(entry.getKey(), entry.getValue());
            }
            return featureBuilder.buildFeature(null);
        }
        return null;
    }

    /**
     * esri polygon 多面转为geo 多面
     * @param esriPolygon
     * @return
     */
    public static MultiPolygon esriPolygonToMultiPolygon(com.esri.core.geometry.Polygon esriPolygon) {
        if (null != esriPolygon) {
            GeometryFactory geometryFactory = new GeometryFactory();
            List<Coordinate[]> ringList = new ArrayList<>();
            for (int pathI = 0; pathI < esriPolygon.getPathCount(); pathI++) {
                Coordinate[] coordinates = new Coordinate[esriPolygon.getPathSize(pathI)];
                int startIndex = esriPolygon.getPathStart(pathI);
                int end = esriPolygon.getPathEnd(pathI);
                int i = 0;
                for (; startIndex < end; startIndex++) {
                    com.esri.core.geometry.Point point = esriPolygon.getPoint(startIndex);
                    coordinates[i] = new Coordinate(point.getX(), point.getY());
                    i++;
                }
                ringList.add(coordinates);
            }
            LinearRing outerRing = geometryFactory.createLinearRing(ringList.get(0));
            LinearRing[] innerRings = new LinearRing[ringList.size() - 1];
            for (int i = 1; i < ringList.size(); i++) {
                innerRings[i - 1] = geometryFactory.createLinearRing(ringList.get(i));
            }
            Polygon[] polygons = {geometryFactory.createPolygon(outerRing, innerRings)};
            return geometryFactory.createMultiPolygon(polygons);
        }
        return null;
    }

    /**
     * esri polygon 多面转为geo 多面
     * @param esriPolygon
     * @return
     */
    public static Polygon esriPolygonToPolygon(com.esri.core.geometry.Polygon esriPolygon) {
        if (null != esriPolygon && esriPolygon.getPathCount() == 1) {
            GeometryFactory geometryFactory = new GeometryFactory();
            Coordinate[] coordinates = new Coordinate[esriPolygon.getPathSize(0)];
            int start = esriPolygon.getPathStart(0);
            int end = esriPolygon.getPathEnd(0);
            for (; start < end; start++) {
                com.esri.core.geometry.Point point = esriPolygon.getPoint(start);
                coordinates[start] = new Coordinate(point.getX(), point.getY());
            }
            LinearRing outerRing = geometryFactory.createLinearRing(coordinates);
            return geometryFactory.createPolygon(outerRing);
        }
        return null;
    }

    /**
     * 返回geotools SimpleFeatureType
     * @param geometry
     * @param esriFeature
     * @return
     */
    private static SimpleFeatureType createIntensityCircle(Geometry geometry, EsriFeature esriFeature) {
        SimpleFeatureTypeBuilder typeBuilder = new SimpleFeatureTypeBuilder();
//        try {
//            typeBuilder.setCRS(CRS.decode("EPSG:102100", true));
//        } catch (FactoryException e) {
//            e.printStackTrace();
//        }
        typeBuilder.setName("Feature");
        typeBuilder.add("GEOMETRY", geometry.getClass());
        Map<String, Object> attributes = esriFeature.attributes;
        Set<Map.Entry<String, Object>> set = attributes.entrySet();
        AttributeTypeBuilder attributeTypeBuilder = new AttributeTypeBuilder();
        for (Map.Entry<String, Object> entry : set) {
            typeBuilder.add(attributeTypeBuilder.binding(Double.class).buildDescriptor(entry.getKey()));
        }
        return typeBuilder.buildFeatureType();
    }

    public static void main(String[] args) {
        String filePath = "D:\\temp\\gis\\jiezhenmkt\\jiezhenmkt.shp";
        String a = "{\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[13522504.046085672,3684214.382448282],[13521778.017280577,3684990.0667615538],[13520966.65132105,3685688.6791528766],[13520073.150297856,3686307.4625183083],[13519101.040451335,3686843.974802601],[13518054.15825493,3687296.098636876],[13516936.635274403,3687662.0496949162],[13515752.881862404,3687940.383735083],[13514507.569752846,3688130.0023000776],[13513205.6136237,3688230.1570520536],[13511852.151700994,3688240.4527259604],[13510452.525480608,3688160.8486894784],[13509012.258647796,3687991.659103369],[13507537.035277758,3687733.5516816354],[13506032.677403169,3687387.5450563524],[13504505.122037282,3686955.0047575957],[13502960.397743255,3686437.637824314],[13501404.600842157,3685837.486067431],[13499843.871353585,3685156.918011749],[13498284.368763795,3684398.61954846],[13496732.247717043,3683565.583335166],[13495193.633726005,3682661.096985223],[13493674.598997174,3681688.7300930326],[13492181.138466649,3680652.3201464876],[13490719.14614084,3679555.957382155],[13489294.391835542,3678403.9686429873],[13487912.49840509,3677200.9003022425],[13486578.919551522,3675951.500321031],[13485298.918301323,3674660.6995102847],[13484077.546234647,3673333.5920710904],[13482919.623549052,3671975.4154902147],[13481829.720036373,3670591.5298701283],[13480812.137047846,3669187.396775139],[13479870.890518636,3667768.557677085],[13479009.695118777,3666340.6120856786],[13478231.949593075,3664909.195449804],[13477540.723347798,3663479.9569169707],[13476938.744337143,3662058.5370387104],[13476428.388297252,3660650.5455098986],[13476011.66937025,3659261.5390298483],[13475690.232155366,3657896.999372562],[13475465.345218433,3656562.311752664],[13475337.896085452,3655262.7435724325],[13475308.387739923,3654003.423633757],[13475376.936637804,3652789.3218971086],[13475543.272247916,3651625.22986737],[13475806.738119595,3650515.7416839595],[13476166.294473412,3649465.235989862],[13476620.522304703,3648477.8586511197],[13477167.628983734,3647557.5063949986],[13477805.455330396,3646707.8114313856],[13478531.484135492,3645932.127118114],[13479342.850095019,3645233.514726791],[13480236.351118213,3644614.7313613594],[13481208.460964734,3644078.2190770665],[13482255.343161138,3643626.095242792],[13483372.866141666,3643260.1441847514],[13484556.619553665,3642981.8101445846],[13485801.931663223,3642792.19157959],[13487103.88779237,3642692.036827614],[13488457.349715075,3642681.7411537073],[13489856.975935461,3642761.3451901893],[13491297.242768273,3642930.534776299],[13492772.46613831,3643188.6421980322],[13494276.8240129,3643534.6488233153],[13495804.379378786,3643967.189122072],[13497349.103672814,3644484.5560553535],[13498904.900573911,3645084.7078122366],[13500465.630062483,3645765.2758679185],[13502025.132652273,3646523.5743312077],[13503577.253699025,3647356.610544502],[13505115.867690064,3648261.096894445],[13506634.902418895,3649233.463786635],[13508128.36294942,3650269.87373318],[13509590.355275229,3651366.2364975126],[13511015.109580526,3652518.2252366804],[13512397.003010979,3653721.293577425],[13513730.581864547,3654970.6935586366],[13515010.583114745,3656261.494369383],[13516231.955181422,3657588.6018085773],[13517389.877867017,3658946.778389453],[13518479.781379696,3660330.6640095394],[13519497.364368223,3661734.7971045286],[13520438.610897433,3663153.6362025826],[13521299.806297291,3664581.581793989],[13522077.551822994,3666012.9984298637],[13522768.77806827,3667442.236962697],[13523370.757078925,3668863.6568409572],[13523881.113118816,3670271.648369769],[13524297.832045818,3671660.6548498194],[13524619.269260703,3673025.1945071057],[13524844.156197635,3674359.8821270037],[13524971.605330616,3675659.450307235],[13525001.113676146,3676918.7702459106],[13524932.564778265,3678132.871982559],[13524766.229168152,3679296.964012298],[13524502.763296474,3680406.452195708],[13524143.206942657,3681456.9578898055],[13523688.979111366,3682444.335228548],[13523141.872432334,3683364.687484669],[13522504.046085672,3684214.382448282]]],[[[13504762.169724345,3669327.1805371],[13504885.007711884,3669162.3240383016],[13504989.177536078,3668982.8604870755],[13505074.26808622,3668789.4981440688],[13505139.943548784,3668583.0001221118],[13505185.944732724,3668364.181374556],[13505212.090092383,3668133.9054790293],[13505218.27644397,3667893.081229288],[13505204.479372783,3667642.6590486253],[13505170.753329556,3667383.627238979],[13505117.231415577,3667117.008080563],[13505044.124857387,3666843.853797389],[13504951.722173171,3666565.2424046183],[13504840.38803411,3666282.2734541353],[13504710.561825188,3665996.06369511],[13504562.75591114,3665707.7426667046],[13504397.553614378,3665418.4482402964],[13504215.6069129,3665129.322128822],[13504017.633867208,3664841.505380952],[13503804.415786471,3664556.1338779014],[13503576.794145042,3664274.333850618],[13503335.667261552,3663997.217435067],[13503081.986753646,3663725.878283137],[13502816.753782395,3663461.387246501],[13502541.015101165,3663204.7881504437],[13502255.858924553,3662957.0936743678],[13501962.410633717,3662719.2813552106],[13501661.828334995,3662492.2897295505],[13501355.2982894,3662277.01462963],[13501044.030230975,3662074.3056479185],[13500729.252592549,3661884.9627841585],[13500412.20765765,3661709.7332881317],[13500094.146657791,3661549.308710602],[13499776.32483443,3661404.3221740867],[13499459.996485109,3661275.345874209],[13499146.4100133,3661162.8888214985],[13498836.803001545,3661067.394832567],[13498532.397327278,3660989.240778561],[13498234.39434062,3660928.7350978274],[13497943.970123217,3660886.116578645],[13497662.270846773,3660861.553416839],[13497390.408249635,3660855.1425519856],[13497129.455249272,3660866.9092848403],[13496880.441707961,3660896.8071774864],[13496644.350368382,3660944.7182365973],[13496422.112975195,3661010.453379113],[13496214.60659786,3661093.7531784577],[13496022.650169246,3661194.288888379],[13495847.001253681,3661311.663740359],[13495688.353057189,3661445.414509482],[13495547.331691723,3661595.0133425677],[13495424.493704185,3661759.869841366],[13495320.32387999,3661939.333392592],[13495235.23332985,3662132.695735599],[13495169.557867285,3662339.193757556],[13495123.556683345,3662558.0125051118],[13495097.411323685,3662788.2884006384],[13495091.224972099,3663029.1126503795],[13495105.022043286,3663279.5348310424],[13495138.748086512,3663538.5666406886],[13495192.270000491,3663805.1857991046],[13495265.376558682,3664078.3400822785],[13495357.779242897,3664356.9514750494],[13495469.113381958,3664639.9204255324],[13495598.93959088,3664926.1301845578],[13495746.745504929,3665214.451212963],[13495911.94780169,3665503.745639371],[13496093.894503169,3665792.8717508456],[13496291.86754886,3666080.688498716],[13496505.085629597,3666366.0600017663],[13496732.707271026,3666647.8600290497],[13496973.834154516,3666924.9764446006],[13497227.514662422,3667196.3155965307],[13497492.747633673,3667460.8066331665],[13497768.486314904,3667717.405729224],[13498053.642491516,3667965.1002053],[13498347.090782352,3668202.912524457],[13498647.673081074,3668429.904150117],[13498954.203126669,3668645.1792500378],[13499265.471185094,3668847.888231749],[13499580.24882352,3669037.231095509],[13499897.293758418,3669212.460591536],[13500215.354758278,3669372.8851690656],[13500533.176581638,3669517.871705581],[13500849.50493096,3669646.8480054587],[13501163.09140277,3669759.305058169],[13501472.698414523,3669854.799047101],[13501777.10408879,3669932.9531011065],[13502075.10707545,3669993.4587818403],[13502365.531292852,3670036.0773010226],[13502647.230569296,3670060.640462829],[13502919.093166433,3670067.051327682],[13503180.046166796,3670055.2845948273],[13503429.059708107,3670025.3867021813],[13503665.151047686,3669977.4756430704],[13503887.388440873,3669911.7405005544],[13504094.89481821,3669828.44070121],[13504286.851246823,3669727.9049912887],[13504462.500162387,3669610.530139309],[13504621.14835888,3669476.7793701855],[13504762.169724345,3669327.1805371]]]]},\"properties\":{\"lowerValue\":6,\"upperValue\":7,\"lowerLangAxis\":29174.933097408455,\"lowerShortAxis\":16895.71906618908,\"upperLangAxis\":6014.558368900534,\"upperShortAxis\":3268.7441152510105,\"angle\":40,\"x\":13500154.750708034,\"y\":3665461.096939834}}";
        String b = "{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13504762.169724345,3669327.1805371],[13504885.007711884,3669162.3240383016],[13504989.177536078,3668982.8604870755],[13505074.26808622,3668789.4981440688],[13505139.943548784,3668583.0001221118],[13505185.944732724,3668364.181374556],[13505212.090092383,3668133.9054790293],[13505218.27644397,3667893.081229288],[13505204.479372783,3667642.6590486253],[13505170.753329556,3667383.627238979],[13505117.231415577,3667117.008080563],[13505044.124857387,3666843.853797389],[13504951.722173171,3666565.2424046183],[13504840.38803411,3666282.2734541353],[13504710.561825188,3665996.06369511],[13504562.75591114,3665707.7426667046],[13504397.553614378,3665418.4482402964],[13504215.6069129,3665129.322128822],[13504017.633867208,3664841.505380952],[13503804.415786471,3664556.1338779014],[13503576.794145042,3664274.333850618],[13503335.667261552,3663997.217435067],[13503081.986753646,3663725.878283137],[13502816.753782395,3663461.387246501],[13502541.015101165,3663204.7881504437],[13502255.858924553,3662957.0936743678],[13501962.410633717,3662719.2813552106],[13501661.828334995,3662492.2897295505],[13501355.2982894,3662277.01462963],[13501044.030230975,3662074.3056479185],[13500729.252592549,3661884.9627841585],[13500412.20765765,3661709.7332881317],[13500094.146657791,3661549.308710602],[13499776.32483443,3661404.3221740867],[13499459.996485109,3661275.345874209],[13499146.4100133,3661162.8888214985],[13498836.803001545,3661067.394832567],[13498532.397327278,3660989.240778561],[13498234.39434062,3660928.7350978274],[13497943.970123217,3660886.116578645],[13497662.270846773,3660861.553416839],[13497390.408249635,3660855.1425519856],[13497129.455249272,3660866.9092848403],[13496880.441707961,3660896.8071774864],[13496644.350368382,3660944.7182365973],[13496422.112975195,3661010.453379113],[13496214.60659786,3661093.7531784577],[13496022.650169246,3661194.288888379],[13495847.001253681,3661311.663740359],[13495688.353057189,3661445.414509482],[13495547.331691723,3661595.0133425677],[13495424.493704185,3661759.869841366],[13495320.32387999,3661939.333392592],[13495235.23332985,3662132.695735599],[13495169.557867285,3662339.193757556],[13495123.556683345,3662558.0125051118],[13495097.411323685,3662788.2884006384],[13495091.224972099,3663029.1126503795],[13495105.022043286,3663279.5348310424],[13495138.748086512,3663538.5666406886],[13495192.270000491,3663805.1857991046],[13495265.376558682,3664078.3400822785],[13495357.779242897,3664356.9514750494],[13495469.113381958,3664639.9204255324],[13495598.93959088,3664926.1301845578],[13495746.745504929,3665214.451212963],[13495911.94780169,3665503.745639371],[13496093.894503169,3665792.8717508456],[13496291.86754886,3666080.688498716],[13496505.085629597,3666366.0600017663],[13496732.707271026,3666647.8600290497],[13496973.834154516,3666924.9764446006],[13497227.514662422,3667196.3155965307],[13497492.747633673,3667460.8066331665],[13497768.486314904,3667717.405729224],[13498053.642491516,3667965.1002053],[13498347.090782352,3668202.912524457],[13498647.673081074,3668429.904150117],[13498954.203126669,3668645.1792500378],[13499265.471185094,3668847.888231749],[13499580.24882352,3669037.231095509],[13499897.293758418,3669212.460591536],[13500215.354758278,3669372.8851690656],[13500533.176581638,3669517.871705581],[13500849.50493096,3669646.8480054587],[13501163.09140277,3669759.305058169],[13501472.698414523,3669854.799047101],[13501777.10408879,3669932.9531011065],[13502075.10707545,3669993.4587818403],[13502365.531292852,3670036.0773010226],[13502647.230569296,3670060.640462829],[13502919.093166433,3670067.051327682],[13503180.046166796,3670055.2845948273],[13503429.059708107,3670025.3867021813],[13503665.151047686,3669977.4756430704],[13503887.388440873,3669911.7405005544],[13504094.89481821,3669828.44070121],[13504286.851246823,3669727.9049912887],[13504462.500162387,3669610.530139309],[13504621.14835888,3669476.7793701855],[13504762.169724345,3669327.1805371]]]},\"properties\":{\"lowerValue\":7,\"upperValue\":8,\"lowerLangAxis\":6014.558368900534,\"lowerShortAxis\":3268.7441152510105,\"upperLangAxis\":-5003.116417490744,\"upperShortAxis\":-2587.1967940189293,\"angle\":40,\"x\":13500154.750708034,\"y\":3665461.096939834}}";
        Feature f = geoJsonToFeature(b);
        Polygon polygon = GeoFeatureUtil.getPolygon(f);
//        MultiPolygon polygon = GeoFeatureUtil.getMultiPolygon(f);
        ArrayList<TownModel> list = GeoShapeReaderUtil.getTownModel(filePath);
        for (TownModel townModel : list) {
//            townModel.getGeometry();
            System.out.println(townModel);
            Geometry g = polygon.intersection(townModel.getGeometry());
            System.out.println(g.getArea());
        }
//        System.out.println(polygon);
    }

}
